_______________________________________________________________________________________
CSS-фильтры

CSS свойство filter позволяет вам применять к элементу такие графические эффекты, как размытие и смещение цвета.
Фильтры обычно используются для регулировки рендеринга изображений, фонов и рамок.

Применение фильтров полезно, когда вам нужны разные стили для одного и того же изображения. 
Вместо того, чтобы загружать несколько изображений на веб-сайт, вы можете загрузить только одно изображение, а затем добавить визуальные эффекты с помощью свойства filter.

Функции фильтра включают blur(), brightness(), contrast(), drop-shadow(), grayscale(), hue-rotate(), invert(), opacity(), saturate() и sepia().

Нажмите Продолжить, чтобы изучить фильтры и увидеть их в действии!

Свойство filter не поддерживается в Internet Explorer, Edge 12, Safari 5.1 и более ранних версиях.
_______________________________________________________________________________________
Функция drop-shadow

drop-shadow(w h b c) создает эффект тени, который выходит за пределы изображения для ширины w и высоты h с размытием b и цветом c. 
w, h и b – значения в пикселях.

Например:

.dropshadow {
  filter: drop-shadow(5px 9px 2px blue);
} 

Положительные значения создают тень справа и внизу изображения.
Отрицательные значения ширины и высоты создают тень выше и левее от изображения.
_______________________________________________________________________________________
Функция grayscale

Функция grayscale преобразует изображение в черно-белое.
Единственный параметр определяет пропорции преобразования.

0% grayscale – это исходное изображение, тогда как 100% делает изображение полностью черно-белым.

Вот пример использования процентного значения, чтобы сделать изображение полностью черно-белым: 

.filtered {
  filter: grayscale(100%);
}

Любое отрицательное значение оставляет изображение неизменным.
_______________________________________________________________________________________
Функция sepia

Функция sepia преобразует изображение в сепию.
Это похоже на использование grayscale, но с красновато-коричневым цветовым тоном.

Идея фильтров sepia заключается в том, что они могут сделать черно-белые фотографии более привлекательными.

0% sepia – это исходное изображение, тогда как 100% полностью преобразует изображение в сепию:

.filtered {
  filter: sepia(100%);
}
_______________________________________________________________________________________
Функция saturate

Функция saturate управляет насыщенностью цвета изображения.
Единственный параметр определяет пропорции насыщения цвета изображения.
Параметр может быть либо процентным значением, либо числом.

0% создает полностью ненасыщенное изображение (черно-белое), тогда как 100% – это исходное изображение. 

.filtered {
  filter: saturate(50%);
}

Вот пример использования значения числа, чтобы сделать изображение супер-насыщенным:

.filtered {
  filter: saturate(2.5);
}

Функция saturate также допускает значения более 100%.
_______________________________________________________________________________________
Функция hue-rotate

Функция hue-rotate применяет поворот оттенка (на основе цветового круга) к изображению.
В качестве параметра функция принимает угол поворота. Значение угла определяет количество градусов вокруг цветового круга, входные параметры которого будут скорректированы.

Когда вы используете hue-rotate() для поворота оттенка, вы вращаете вокруг этого цветового круга.

Если изображение содержит красный цвет, который находится на 0 градусов на цветовом круге, поворот оттенка на 240 градусов сделает красный цвет синим.

Вот пример поворота оттенка: 

.filtered {
  filter: hue-rotate(180deg);
}

Повороты на 0 и 360 градусов оставляют изображение неизменным.
_______________________________________________________________________________________
Функция invert

Функция invert инвертирует цвета изображения так, чтобы темные области стали яркими, а яркие области темными.

Функция принимает пропорции преобразования в качестве ее параметра.

Параметр может быть либо процентным значением, либо числом.

0% invert – это исходное изображение, тогда как 100% создает полностью инвертированное изображение, подобное фотографии в негативе.

Вот пример использования процентного значения, чтобы сделать изображение частично инвертированным: 

.filtered {
  filter: invert(70%);
}

Спецификации допускают значения более 100%, но это не будет иметь никакого дальнейшего влияния на изображение.
_______________________________________________________________________________________
Функция opacity

Функция opacity задает непрозрачность изображения, чтобы изменить его прозрачность.

0% opacity создает полностью прозрачное изображение, тогда как 100% – это исходное изображение.
Например: 

.filtered {
  filter: opacity(70%);
}
_______________________________________________________________________________________
Функция brightness

Функция brightness(amount) регулирует яркость изображения, делая его ярче или темнее.
Параметр amount определяет уровень яркости изображения. Параметр может принимать либо процентное значение, либо число.

Значение 0% приводит к полностью черному изображению.
Значение 100% приводит к неизменному изображению.
Любая сумма более 100% создает более яркое изображение.

Вот пример использования процентного значения, чтобы сделать изображение темнее:

.filtered {
  filter: brightness(50%);
}

Значение менее 100% затемняет изображение, а значение более 100% его осветляет.
_______________________________________________________________________________________
Функция contrast

Функция contrast(amount) регулирует контрастность изображения.
Параметр amount может принимать либо процентное значение, либо числовое.

Значение менее 100% уменьшает контраст, а значение более 100% увеличивает его.
Значение 0% создаст полностью серое изображение, а значение 100% оставит его неизменным.
Значение 0.5 соответствует 50%, а 1 – 100%.

Вот пример использования процентного значения, чтобы сделать изображение более контрастным: 

.filtered {
  filter: contrast(140%);
}

Любое отрицательное значение оставляет изображение неизменным.
_______________________________________________________________________________________
Функция blur

Функция blur применяет эффект размытия к изображению.
Функция размытия имеет только один параметр, радиус, который определяет, сколько пикселей на экране смешиваются друг с другом. (большее значение создает больше размытости).
Например:

.blured {
  filter: blur(5px);
}

Параметр определен как длина CSS, но не принимает процентные значения.

Если параметр не указан, по умолчанию используется значение 0, которое оставляет изображение неизменным.
Например:

.blur {
  /*  Both have no effect on the picture*/
  blur();  /* If no parameter is provided, then a value 0 is used.*/
  blur(0); /* A value of 0 leaves the input unchanged.*/
}
_______________________________________________________________________________________
Использование нескольких CSS-фильтров

Несколько CSS-фильтров можно использовать вместе, разделяя их пробелами.
Следующий код демонстрирует использование функций blur и hue-rotate:

.filtered {
  filter: blur(5px) hue-rotate(180deg);
}

Другой пример:

.filtered {
  filter: saturate(30%) drop-shadow(5px 9px 2px gray) blur(1px);
} 

Другой пример из 19-го века: 

.filtered {
  filter: brightness(150%) sepia(100%);
}
_______________________________________________________________________________________
 